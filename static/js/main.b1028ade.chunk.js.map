{"version":3,"sources":["images/afro.jpg","Header.js","Buttons.js","TodoItems.js","Todo.js","About.js","data.js","Blank.js","Experi.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","style","color","textDecoration","to","Component","Buttons","state","title","onChange","e","setState","target","name","value","onSubmit","preventDefault","props","addTodoItem","this","type","placeholder","React","TodoItems","cssStyle","todo","completed","id","markComplete","bind","float","padding","background","borderRadius","fontWeight","cursor","outline","border","fontSize","textAlign","onClick","deleteItem","Todo","todos","map","key","About","src","alt","products","_id","category","image","price","brand","rating","numReview","review","Blank","Data","item","Experi","productss","data","console","log","index","App","filter","newTodo","uuidv4","path","exact","render","Fragment","length","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b1028ade.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/afro.0bb247cd.jpg\";","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <h1>TodoList</h1>\r\n        <h3 className=\"links\"> <Link style={{ color: \"white\", textDecoration: \"none\" }} to=\"./\">Home </Link> {\"  \"}| {\"  \"} <Link style={{color:\"white\", textDecoration:\"none\"}} to=\"./about\">About</Link></h3> \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react';\r\n\r\nexport class Buttons extends React.Component {\r\n\r\n\r\n    state={\r\n        title:\"\"\r\n    }\r\n\r\n//set the onchange state of the input element // use the e.target.name to set the value note:e.targe.{ name} must correspond with the state\r\n    onChange =(e)=>{\r\n        this.setState({[e.target.name] :e.target.value});\r\n    }\r\n\r\n// use props to pass the function to the main app.js where the initial state of the app is\r\n    onSubmit=(e)=>{\r\n        e.preventDefault();\r\n        this.props.addTodoItem(this.state.title)\r\n        \r\n        this.setState({title:\"\"})\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <form className=\"form\" onSubmit={this.onSubmit}>\r\n                <input type=\"text\" className=\"input\" placeholder=\"add todos.....\" name=\"title\" value={this.state.title} onChange={this.onChange}/>\r\n                <button className=\"buttons\" >submit</button>\r\n\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Buttons;\r\n","import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\n\r\nexport class TodoItems extends Component {\r\n  cssStyle =()=>{\r\n     return {textDecoration:this.props.todo.completed ? \"line-through\" : ''}\r\n  }\r\n\r\n \r\n  render() {\r\n\r\n    const {title, id}=this.props.todo;\r\n    return (\r\n\r\n     <div className=\"eachItem\" style={this.cssStyle()}>\r\n      <p>\r\n          <input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)}/> {\" \"}\r\n        \r\n        {title}\r\n\r\n        <button style={{ float: \"right\",\r\n         padding: \"5px 10px\",\r\n            background: \" rgb(5, 80, 57)\", \r\n          borderRadius:\"20%\", \r\n          fontWeight:\"bold\",\r\n            cursor: \"pointer\",\r\n            outline:\"none\",\r\n            border:\"none\",\r\n            fontSize:\"15px\",\r\n            textAlign:\"center\"\r\n          }} onClick={this.props.deleteItem.bind(this, id)}>\r\n            x</button>\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nTodoItems.propTypes = {\r\n  todo: propTypes.object.isRequired\r\n}\r\nexport default TodoItems\r\n","import React, { Component } from 'react'\r\nimport TodoItems from './TodoItems';\r\nimport propTypes from 'prop-types';\r\n\r\nexport class Todo extends Component {\r\n\r\n    \r\n    render() {\r\n       \r\n        return (\r\n            <div className=\"todoItems\">\r\n            \r\n            {this.props.todos.map((todo)=>(\r\n                <TodoItems key={todo.id} todo={todo} markComplete={this.props.markComplete} deleteItem={this.props.deleteItem}/>\r\n            ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst prototype = Todo.propTypes = {\r\n    todos: propTypes.array.isRequired\r\n};\r\nexport default Todo\r\n\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1>About</h1>\r\n            <p>this  is my own react project practice based</p>\r\n            <img src=\"/images/afro.jpg\" alt=\"_git_hub_pages\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default {\r\n  products: [\r\n    {\r\n      _id: \"1234\",\r\n      name: \"slim hood\",\r\n      category: \"hood\",\r\n      image: \"/images/afro.jpg\",\r\n      price: \"KES 1800\",\r\n      brand: \"Nike\",\r\n      rating: \"4.5\",\r\n      numReview: 10,\r\n    },\r\n    {\r\n      _id: \"1244\",\r\n      name: \"kenya hood\",\r\n      category: \"hood\",\r\n      image: \"/images/d3.jpg\",\r\n      price: \"KES 2500\",\r\n      brand: \"Champion\",\r\n      rating: \"4.4\",\r\n      numReview: 10,\r\n    },\r\n    {\r\n      _id: \"15457\",\r\n      name: \"Tiger hood\",\r\n      category: \"hood\",\r\n      image: \"/images/d1.jpg\",\r\n      price: \"KES 2100\",\r\n      brand: \"Spandex\",\r\n      rating: \"4.8\",\r\n      numReview: 10,\r\n    },\r\n    {\r\n      _id: \"1254874\",\r\n      name: \"AIR FORCE\",\r\n      category: \"hoods\",\r\n      image: \"/images/d1.jpg\",\r\n      price: \"KES 2300\",\r\n      brand: \"Nike\",\r\n      rating: \"4.5\",\r\n      numReview: 10,\r\n    },\r\n    {\r\n      _id: \"154564\",\r\n      name: \"Magic hood\",\r\n      image: \"/images/d1.jpg\",\r\n      price: \"KES 1500\",\r\n      brand: \"Nike\",\r\n      rating: \"4.5\",\r\n      review: 10,\r\n    },\r\n  ],\r\n};\r\n","import React, { Component } from 'react';\r\nimport Data from \"./data\";\r\n\r\nexport class Blank extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Blank\">\r\n               <p>please create  new todos</p>\r\n               { Data.products.map((item)=>\r\n            \r\n         ( <img  key={item._id}src={item.image} />\r\n         \r\n          \r\n        ) \r\n               \r\n               \r\n    )}\r\n         </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Blank\r\n","import React from 'react';\r\nimport data from './data';\r\nimport image from './images/afro.jpg';\r\n\r\n\r\nexport default function Experi() {\r\n    const productss= data.products;\r\n    console.log(image);\r\n   \r\n    return (\r\n      <div>\r\n        <div>\r\n          {productss.map((item, index) => (\r\n            <ul key={index}>\r\n              <li>{item._id}</li>\r\n              <li>{item.image}</li>\r\n\r\n              <li>\r\n                <img src={item.image} alt={item._id} />\r\n              </li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport Header from './Header';\nimport './App.css'\nimport Buttons from './Buttons';\nimport Todos from './Todo';\nimport { v4 as uuidv4 } from 'uuid';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport About from './About';\nimport TodoItems from './TodoItems';\nimport Blank from './Blank';\nimport Experi from './Experi';\n\n\nclass App extends React.Component {\n  state={todos:[\n    // {\n    //   id: uuidv4(),\n    //   title: \"cook with bae\",\n    //   completed: false\n    // },\n    // {\n    //   id: uuidv4(),\n    //   title: \"wash clothes\",\n    //   completed: false\n    // },\n    // {\n    //   id: uuidv4(),\n    //   title: \"leant react on youtube\",\n    //   completed: false\n    // },\n    // {\n    //   id: uuidv4(),\n    //   title: \"visit the park\",\n    //   completed: false\n    // }\n  ]\n    \n  }\n  markComplete=(id)=>{\n    this.setState({todos:this.state.todos.map(todo=>{\n      if(todo.id===id){\n        todo.completed=!todo.completed;\n      }\n      return todo;\n    })})\n    \n  }\n  deleteItem=(id)=>{\n    this.setState({todos:[...this.state.todos.filter(todo =>  todo.id !== id)]})\n  }\n  addTodoItem=(title)=>{\n    if(title===\"\"){\n      return;\n    }else{\n      const newTodo = { id: uuidv4(), title: title, completed: false }\n      this.setState({ todos: [...this.state.todos, newTodo] });\n    }\n   \n  }\n \n//!important to use multi cursor use alt and then click on  the two elements you want to change \n\n//this is a lifecylcle method //another lifecycle method is componentDidMount that runs when page first runs\n  \n\nrender() {\n\n  \n  \n    return (\n      <Router> \n      <div className=\"App\">\n        <Header />\n        <Experi />\n          \n          <Route path=\"/\" exact render={(props) => (\n            <React.Fragment>\n              <Buttons addTodoItem={this.addTodoItem}/>\n              <Todos todos={this.state.todos} markComplete={this.markComplete} deleteItem={this.deleteItem}/>\n              {this.state.todos.length === 0 && <Blank />}\n            </React.Fragment>\n          )}   /> \n\n          <Route path=\"/about\" exact component={About}/>\n       \n          \n        </div>\n      </Router>\n     \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}